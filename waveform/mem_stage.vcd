$date
	Sun Sep 21 16:30:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_mem_stage $end
$var wire 1 ! me_o_stall $end
$var wire 1 " me_o_rd_we $end
$var wire 32 # me_o_rd_data [31:0] $end
$var wire 5 $ me_o_rd_addr [4:0] $end
$var wire 11 % me_o_opcode [10:0] $end
$var wire 32 & me_o_load_data [31:0] $end
$var wire 3 ' me_o_funct3 [2:0] $end
$var wire 1 ( me_o_flush $end
$var wire 1 ) me_o_ce $end
$var parameter 32 * AWIDTH $end
$var parameter 32 + DWIDTH $end
$var parameter 32 , FUNCT_WIDTH $end
$var reg 1 - me_clk $end
$var reg 32 . me_i_alu_value [31:0] $end
$var reg 1 / me_i_ce $end
$var reg 1 0 me_i_flush $end
$var reg 3 1 me_i_funct3 [2:0] $end
$var reg 11 2 me_i_opcode [10:0] $end
$var reg 5 3 me_i_rd_addr [4:0] $end
$var reg 32 4 me_i_rd_data [31:0] $end
$var reg 32 5 me_i_rs2_data [31:0] $end
$var reg 1 6 me_i_stall $end
$var reg 1 7 me_rst $end
$var reg 1 8 me_we_reg_n $end
$var integer 32 9 i [31:0] $end
$scope function opc $end
$var integer 32 : idx [31:0] $end
$upscope $end
$scope module UUT $end
$var wire 1 - me_clk $end
$var wire 32 ; me_i_alu_value [31:0] $end
$var wire 1 / me_i_ce $end
$var wire 1 0 me_i_flush $end
$var wire 3 < me_i_funct3 [2:0] $end
$var wire 11 = me_i_opcode [10:0] $end
$var wire 5 > me_i_rd_addr [4:0] $end
$var wire 32 ? me_i_rd_data [31:0] $end
$var wire 32 @ me_i_rs2_data [31:0] $end
$var wire 1 6 me_i_stall $end
$var wire 1 7 me_rst $end
$var wire 1 8 me_we_reg_n $end
$var wire 1 A stall_bit $end
$var wire 32 B raw [31:0] $end
$var wire 1 C op_store $end
$var wire 1 D op_rtype $end
$var wire 1 E op_lui $end
$var wire 1 F op_load $end
$var wire 1 G op_jalr $end
$var wire 1 H op_jal $end
$var wire 1 I op_itype $end
$var wire 1 J op_auipc $end
$var wire 5 K mem_addr [4:0] $end
$var wire 32 L me_i_load_data [31:0] $end
$var wire 1 M me_i_ack $end
$var wire 1 N m_i_stall $end
$var wire 2 O byte_offset_d [1:0] $end
$var parameter 32 P AWIDTH $end
$var parameter 32 Q DWIDTH $end
$var parameter 32 R FUNCT_WIDTH $end
$var reg 4 S byte_enable [3:0] $end
$var reg 4 T byte_enable_d [3:0] $end
$var reg 2 U byte_off_q [1:0] $end
$var reg 32 V final_load [31:0] $end
$var reg 3 W funct_q [2:0] $end
$var reg 1 ) me_o_ce $end
$var reg 1 X me_o_cyc $end
$var reg 1 ( me_o_flush $end
$var reg 3 Y me_o_funct3 [2:0] $end
$var reg 5 Z me_o_load_addr [4:0] $end
$var reg 32 [ me_o_load_data [31:0] $end
$var reg 11 \ me_o_opcode [10:0] $end
$var reg 1 ] me_o_rd $end
$var reg 5 ^ me_o_rd_addr [4:0] $end
$var reg 32 _ me_o_rd_data [31:0] $end
$var reg 1 " me_o_rd_we $end
$var reg 1 ! me_o_stall $end
$var reg 1 ` me_o_stb $end
$var reg 5 a me_o_store_addr [4:0] $end
$var reg 32 b me_o_store_data [31:0] $end
$var reg 1 c me_o_we $end
$var reg 1 d op_load_q $end
$var reg 11 e opcode_q [10:0] $end
$var reg 1 f pending_request $end
$var reg 5 g rd_addr_d [4:0] $end
$var reg 5 h rd_addr_q [4:0] $end
$var reg 32 i rd_data_d [31:0] $end
$var reg 1 j rd_we_d $end
$var reg 32 k store_data_aligned [31:0] $end
$var reg 32 l store_data_aligned_d [31:0] $end
$var reg 1 m temp_pending_request $end
$scope module m $end
$var wire 1 - m_clk $end
$var wire 4 n m_i_byte_enable [3:0] $end
$var wire 1 X m_i_cyc $end
$var wire 32 o m_i_data_store [31:0] $end
$var wire 5 p m_i_load_addr [4:0] $end
$var wire 1 ] m_i_rd $end
$var wire 1 ` m_i_stb $end
$var wire 5 q m_i_store_addr [4:0] $end
$var wire 1 c m_i_we $end
$var wire 1 7 m_rst $end
$var wire 32 r mask [31:0] $end
$var parameter 32 s AWIDTH $end
$var parameter 37 t DEPTH $end
$var parameter 32 u DWIDTH $end
$var reg 32 v data_reg [31:0] $end
$var reg 5 w load_addr_reg [4:0] $end
$var reg 1 M m_o_ack $end
$var reg 32 x m_o_read_data [31:0] $end
$var reg 1 N m_o_stall $end
$var reg 32 y mask_reg [31:0] $end
$var reg 1 z rd_reg $end
$var reg 1 { req_active $end
$var reg 5 | store_addr_reg [4:0] $end
$var reg 1 } we_reg $end
$var integer 32 ~ i [31:0] $end
$upscope $end
$upscope $end
$scope task do_load $end
$var reg 5 !" addr [4:0] $end
$var reg 3 "" funct3 [2:0] $end
$upscope $end
$scope task do_reset $end
$upscope $end
$scope task do_rtype $end
$var reg 5 #" rd_addr [4:0] $end
$var reg 32 $" rd_data [31:0] $end
$upscope $end
$scope task do_store $end
$var reg 5 %" addr [4:0] $end
$var reg 32 &" data [31:0] $end
$var reg 3 '" funct3 [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 u
b100000 t
b101 s
b11 R
b100000 Q
b101 P
b11 ,
b100000 +
b101 *
$end
#0
$dumpvars
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
b100000 ~
x}
bx |
0{
xz
bx y
b0 x
bx w
bx v
b11111111 r
b0 q
b0 p
b0 o
b1 n
0m
b0 l
b0 k
0j
b0 i
b0 h
b0 g
0f
b0 e
0d
0c
b0 b
b0 a
0`
b0 _
b0 ^
0]
b0 \
b0 [
b0 Z
b0 Y
0X
b0 W
b0 V
b0 U
b0 T
b1 S
b0 O
0N
0M
b0 L
b0 K
0J
0I
0H
0G
0F
0E
0D
0C
b0 B
0A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
bx :
b0 9
08
07
06
b0 5
b0 4
b0 3
b0 2
b0 1
00
0/
b0 .
0-
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
0"
0!
$end
#5
b100000 ~
1-
#10
0-
#15
b100000 ~
1-
#20
b10001000100010001000100010001 b
b10001000100010001000100010001 o
1`
1X
1c
b10001000100010001000100010001 k
b1 S
b1 n
1C
0-
18
1/
b10001 5
b10001 @
b1000 2
b1000 =
b11 :
b0 '"
b10001 &"
b0 %"
17
#25
1)
b1 U
b1000 e
1f
1{
0z
1}
b11111111 y
b10001000100010001000100010001 v
b0 |
b0 w
b1111111100000000 r
b100010001000100010001000000000 k
b10 S
b10 n
b1 O
b100010001000100010001000000000 b
b100010001000100010001000000000 o
1`
1X
1c
b100010 5
b100010 @
b1 .
b1 ;
b100010 &"
b1 %"
b1000 2
b1000 =
1/
1-
#30
0-
#35
1A
0{
1M
1N
1!
1m
b111111110000000000000000 r
b110011001100110000000000000000 k
b100 S
b100 n
b10 O
b0 b
b0 o
0`
0X
0c
b110011 5
b110011 @
b10 .
b10 ;
b110011 &"
b10 %"
b1000 2
b1000 =
1/
1-
#40
0-
#45
0A
0f
0)
b1000 %
b1000 \
0!
0N
0M
b11111111000000000000000000000000 r
b1000100000000000000000000000000 k
b1000 S
b1000 n
b11 O
b1000100 5
b1000100 @
b11 .
b11 ;
b1000100 &"
b11 %"
b1000 2
b1000 =
1/
1-
#50
0-
#55
b1010101011001100101010101100110 b
b1010101011001100101010101100110 o
b1 a
b1 q
1`
1X
1c
1)
b0 U
b1 W
1f
0m
b1111111111111111 r
b1 K
b0 O
b0 T
b0 l
b1010101011001100101010101100110 k
b11 S
b11 n
b101010101100110 5
b101010101100110 @
b100 .
b100 ;
b1 1
b1 <
b1 '"
b101010101100110 &"
b100 %"
b1000 2
b1000 =
1/
1-
#60
0-
#65
1A
1!
1m
1{
b1111111111111111 y
b1010101011001100101010101100110 v
b1 |
b111111111111111100000000 r
b10001000011101111000100000000000 k
b110 S
b110 n
b1 O
b0 b
b0 o
b0 a
b0 q
0`
0X
0c
b111011110001000 5
b111011110001000 @
b101 .
b101 ;
b111011110001000 &"
b101 %"
b1000 2
b1000 =
1/
1-
#70
0-
#75
0{
1M
1N
0)
b11111111111111110000000000000000 r
b10011001101010100000000000000000 k
b1100 S
b1100 n
b10 O
b1001100110101010 5
b1001100110101010 @
b110 .
b110 ;
b1001100110101010 &"
b110 %"
b1000 2
b1000 =
1/
1-
#80
0-
#85
0A
0f
b1 '
b1 Y
0!
0N
0M
b10 K
b11111111111111111111111111111111 r
b0 O
b11001010111111101011101010111110 k
b1111 S
b1111 n
b11001010111111101011101010111110 5
b11001010111111101011101010111110 @
b1000 .
b1000 ;
b10 1
b10 <
b10 '"
b11001010111111101011101010111110 &"
b1000 %"
b1000 2
b1000 =
1/
1-
#90
0-
#95
1`
1X
1]
1)
b100 e
b0 W
1f
0m
b0 K
b11111111 r
b10111110101111101011111010111110 k
b1 S
b1 n
1F
0C
b0 .
b0 ;
b0 1
b0 <
b10 :
b0 ""
b0 !"
b100 2
b100 =
1/
1-
#100
0-
#105
1A
1!
1m
1{
1z
0}
b11111111 y
b0 v
b0 |
b0 r
b1 O
b0 k
b0 S
b0 n
0`
0X
0]
b1 .
b1 ;
b100 1
b100 <
b100 ""
b1 !"
b100 2
b100 =
1/
1-
#110
0-
#115
b10001 V
0{
1M
b10001 B
b10001 L
b10001 x
1N
0)
b111111110000000000000000 r
b10 O
b100 S
b100 n
b10111110101111100000000000000000 k
b10 .
b10 ;
b0 1
b0 <
b0 ""
b10 !"
b100 2
b100 =
1/
1-
#120
0-
#125
0A
0f
b0 '
b0 Y
b100 %
b100 \
0!
0N
0M
b0 r
b11 O
b0 k
b0 S
b0 n
b11 .
b11 ;
b100 1
b100 <
b100 ""
b11 !"
b100 2
b100 =
1/
1-
#130
0-
#135
b1 Z
b1 p
1`
1X
1]
1)
1d
b1 W
1f
0m
b1 K
b1111111111111111 r
b0 O
b0 T
b0 l
b11 S
b11 n
b10111010101111101011101010111110 k
b100 .
b100 ;
b1 1
b1 <
b1 ""
b100 !"
b100 2
b100 =
1/
1-
#140
0-
#145
1A
1!
1m
1{
b1111111111111111 y
b1 w
b0 r
b0 k
b0 S
b0 n
b0 Z
b0 p
0`
0X
0]
b101 1
b101 <
b101 ""
b100 2
b100 =
1/
1-
#150
0-
#155
b101010101100110 V
0{
1M
b101010101100110 B
b101010101100110 L
b101010101100110 x
1N
0)
b11111111111111110000000000000000 r
b10 O
b1100 S
b1100 n
b10111010101111100000000000000000 k
b110 .
b110 ;
b1 1
b1 <
b1 ""
b110 !"
b100 2
b100 =
1/
1-
#160
0-
#165
0A
0f
b101010101100110 #
b101010101100110 _
b101010101100110 &
b101010101100110 [
1"
b1 '
b1 Y
0!
0N
0M
b0 r
b0 k
b0 S
b0 n
b101 1
b101 <
b101 ""
b100 2
b100 =
1/
1-
#170
0-
#175
b10 Z
b10 p
1`
1X
1]
1)
b10 W
1f
0m
b10 K
b11111111111111111111111111111111 r
b0 O
b1111 S
b1111 n
b11001010111111101011101010111110 k
b1000 .
b1000 ;
b10 1
b10 <
b10 ""
b1000 !"
b100 2
b100 =
1/
1-
#180
0-
#185
1A
1!
1m
1{
b11111111111111111111111111111111 y
b10 w
b1000 i
b101 g
0j
1D
0F
b0 Z
b0 p
0`
0X
0]
b10010001101000101011001111000 4
b10010001101000101011001111000 ?
b101 3
b101 >
b0 :
b10010001101000101011001111000 $"
b101 #"
b1 2
b1 =
1/
1-
#190
0-
#195
b0 V
0{
1M
b0 B
b0 L
b0 x
1N
0)
b1000 i
b101 g
0/
1-
#200
0-
#205
0A
0f
1(
0!
0N
0M
b0 i
b0 g
0D
10
b0 2
b0 =
1-
#210
0-
#215
0(
0m
00
1-
#220
0-
#225
1-
#230
0-
#235
1-
#240
0-
#245
1-
#250
0-
#255
1-
#260
0-
#265
1-
