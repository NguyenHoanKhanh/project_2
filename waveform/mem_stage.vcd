$date
	Tue Sep 23 15:36:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_mem_stage $end
$var wire 1 ! me_o_stall $end
$var wire 1 " me_o_rd_we $end
$var wire 32 # me_o_rd_data [31:0] $end
$var wire 5 $ me_o_rd_addr [4:0] $end
$var wire 11 % me_o_opcode [10:0] $end
$var wire 32 & me_o_load_data [31:0] $end
$var wire 3 ' me_o_funct3 [2:0] $end
$var wire 1 ( me_o_flush $end
$var wire 1 ) me_o_ce $end
$var parameter 32 * AWIDTH $end
$var parameter 32 + DWIDTH $end
$var parameter 32 , FUNCT_WIDTH $end
$var reg 1 - me_clk $end
$var reg 32 . me_i_alu_value [31:0] $end
$var reg 1 / me_i_ce $end
$var reg 1 0 me_i_flush $end
$var reg 3 1 me_i_funct3 [2:0] $end
$var reg 11 2 me_i_opcode [10:0] $end
$var reg 5 3 me_i_rd_addr [4:0] $end
$var reg 32 4 me_i_rd_data [31:0] $end
$var reg 32 5 me_i_rs2_data [31:0] $end
$var reg 1 6 me_i_stall $end
$var reg 1 7 me_rst $end
$var reg 1 8 me_we_reg_n $end
$var integer 32 9 i [31:0] $end
$scope function opc $end
$var integer 32 : idx [31:0] $end
$upscope $end
$scope module UUT $end
$var wire 1 - me_clk $end
$var wire 32 ; me_i_alu_value [31:0] $end
$var wire 1 / me_i_ce $end
$var wire 1 0 me_i_flush $end
$var wire 3 < me_i_funct3 [2:0] $end
$var wire 11 = me_i_opcode [10:0] $end
$var wire 5 > me_i_rd_addr [4:0] $end
$var wire 32 ? me_i_rd_data [31:0] $end
$var wire 32 @ me_i_rs2_data [31:0] $end
$var wire 1 6 me_i_stall $end
$var wire 1 7 me_rst $end
$var wire 1 A me_stall_from_alu $end
$var wire 1 8 me_we_reg_n $end
$var wire 1 B stall_bit $end
$var wire 32 C raw [31:0] $end
$var wire 1 D op_store $end
$var wire 1 E op_rtype $end
$var wire 1 F op_lui $end
$var wire 1 G op_load $end
$var wire 1 H op_jalr $end
$var wire 1 I op_jal $end
$var wire 1 J op_itype $end
$var wire 1 K op_auipc $end
$var wire 5 L mem_addr [4:0] $end
$var wire 32 M me_i_load_data [31:0] $end
$var wire 1 N me_i_ack $end
$var wire 1 O m_i_stall $end
$var wire 2 P byte_offset_d [1:0] $end
$var parameter 32 Q AWIDTH $end
$var parameter 32 R DWIDTH $end
$var parameter 32 S FUNCT_WIDTH $end
$var reg 4 T byte_enable [3:0] $end
$var reg 4 U byte_enable_d [3:0] $end
$var reg 2 V byte_off_q [1:0] $end
$var reg 32 W final_load [31:0] $end
$var reg 3 X funct_q [2:0] $end
$var reg 1 ) me_o_ce $end
$var reg 1 Y me_o_cyc $end
$var reg 1 ( me_o_flush $end
$var reg 3 Z me_o_funct3 [2:0] $end
$var reg 5 [ me_o_load_addr [4:0] $end
$var reg 32 \ me_o_load_data [31:0] $end
$var reg 11 ] me_o_opcode [10:0] $end
$var reg 1 ^ me_o_rd $end
$var reg 5 _ me_o_rd_addr [4:0] $end
$var reg 32 ` me_o_rd_data [31:0] $end
$var reg 1 " me_o_rd_we $end
$var reg 1 ! me_o_stall $end
$var reg 1 a me_o_stb $end
$var reg 5 b me_o_store_addr [4:0] $end
$var reg 32 c me_o_store_data [31:0] $end
$var reg 1 d me_o_we $end
$var reg 1 e op_load_q $end
$var reg 11 f opcode_q [10:0] $end
$var reg 1 g pending_request $end
$var reg 5 h rd_addr_d [4:0] $end
$var reg 5 i rd_addr_q [4:0] $end
$var reg 32 j rd_data_d [31:0] $end
$var reg 1 k rd_we_d $end
$var reg 32 l store_data_aligned [31:0] $end
$var reg 32 m store_data_aligned_d [31:0] $end
$var reg 1 n temp_pending_request $end
$scope module m $end
$var wire 1 - m_clk $end
$var wire 4 o m_i_byte_enable [3:0] $end
$var wire 1 Y m_i_cyc $end
$var wire 32 p m_i_data_store [31:0] $end
$var wire 5 q m_i_load_addr [4:0] $end
$var wire 1 ^ m_i_rd $end
$var wire 1 a m_i_stb $end
$var wire 5 r m_i_store_addr [4:0] $end
$var wire 1 d m_i_we $end
$var wire 1 7 m_rst $end
$var wire 32 s mask [31:0] $end
$var parameter 32 t AWIDTH $end
$var parameter 37 u DEPTH $end
$var parameter 32 v DWIDTH $end
$var reg 32 w data_reg [31:0] $end
$var reg 5 x load_addr_reg [4:0] $end
$var reg 1 N m_o_ack $end
$var reg 32 y m_o_read_data [31:0] $end
$var reg 1 O m_o_stall $end
$var reg 32 z mask_reg [31:0] $end
$var reg 1 { rd_reg $end
$var reg 1 | req_active $end
$var reg 5 } store_addr_reg [4:0] $end
$var reg 1 ~ we_reg $end
$var integer 32 !" i [31:0] $end
$upscope $end
$upscope $end
$scope task do_load $end
$var reg 5 "" addr [4:0] $end
$var reg 3 #" funct3 [2:0] $end
$upscope $end
$scope task do_reset $end
$upscope $end
$scope task do_rtype $end
$var reg 5 $" rd_addr [4:0] $end
$var reg 32 %" rd_data [31:0] $end
$upscope $end
$scope task do_store $end
$var reg 5 &" addr [4:0] $end
$var reg 32 '" data [31:0] $end
$var reg 3 (" funct3 [2:0] $end
$upscope $end
$scope task introduce_stall $end
$var integer 32 )" cycles [31:0] $end
$var integer 32 *" j [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 v
b100000 u
b101 t
b11 S
b100000 R
b101 Q
b11 ,
b100000 +
b101 *
$end
#0
$dumpvars
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
b100000 !"
x~
bx }
0|
x{
bx z
b0 y
bx x
bx w
b11111111 s
b0 r
b0 q
b0 p
b1 o
0n
b0 m
b0 l
0k
b0 j
b0 i
b0 h
0g
b0 f
0e
0d
b0 c
b0 b
0a
b0 `
b0 _
0^
b0 ]
b0 \
b0 [
b0 Z
0Y
b0 X
b0 W
b0 V
b0 U
b1 T
b0 P
0O
0N
b0 M
b0 L
0K
0J
0I
0H
0G
0F
0E
0D
b0 C
0B
zA
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
bx :
b0 9
08
07
06
b0 5
b0 4
b0 3
b0 2
b0 1
00
0/
b0 .
0-
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
0"
0!
$end
#5
b100000 !"
1-
#10
0-
#15
b100000 !"
1-
#20
0-
17
#25
1!
1B
b0 *"
16
b10 )"
1-
#30
0-
#35
b1 *"
1-
#40
0-
#45
0B
0!
06
b10 *"
1-
#50
0-
#55
xB
1)
b1000 %
b1000 ]
x!
b10001000100010001000100010001 c
b10001000100010001000100010001 p
1a
1Y
1d
b10001000100010001000100010001 l
b1 T
b1 o
1D
18
1/
b10001 5
b10001 @
b1000 2
b1000 =
b11 :
b0 ("
b10001 '"
b0 &"
1-
#60
0-
#65
0)
b1000 f
1g
1|
0{
1~
b11111111 z
b10001000100010001000100010001 w
b0 }
b0 x
1-
#70
0-
#75
1B
0|
1N
1O
1!
1n
b1111111100000000 s
b100010001000100010001000000000 l
b10 T
b10 o
b1 P
b0 c
b0 p
0a
0Y
0d
b100010 5
b100010 @
b1 .
b1 ;
b100010 '"
b1 &"
b1000 2
b1000 =
1/
1-
#80
0-
#85
0g
0O
0N
1-
#90
0-
#95
0n
0D
b0 *"
16
b11 )"
b0 2
b0 =
0/
1-
#100
0-
#105
b1 *"
1-
#110
0-
#115
b10 *"
1-
#120
0-
#125
0B
0!
06
b11 *"
1-
#130
0-
#135
xB
1)
x!
b111111110000000000000000 s
1a
1Y
1d
b110011001100110000000000000000 l
b100 T
b100 o
b110011001100110000000000000000 c
b110011001100110000000000000000 p
b10 P
1D
1/
b110011 5
b110011 @
b10 .
b10 ;
b1000 2
b1000 =
b110011 '"
b10 &"
1-
#140
0-
#145
0)
b10 V
1g
1|
b111111110000000000000000 z
b110011001100110000000000000000 w
1-
#150
0-
#155
0|
1N
1O
1!
1n
1B
0D
b0 c
b0 p
0a
0Y
0d
b0 *"
16
b1 )"
b0 2
b0 =
0/
1-
#160
0-
#165
0g
0O
0N
06
b1 *"
1-
#170
0-
#175
xB
b1010101011001100101010101100110 c
b1010101011001100101010101100110 p
b1 b
b1 r
1a
1Y
1d
b1 '
b1 Z
x!
0n
b1 L
b1111111111111111 s
b0 P
b1010101011001100101010101100110 l
b11 T
b11 o
1D
1/
b101010101100110 5
b101010101100110 @
b100 .
b100 ;
b1 1
b1 <
b1000 2
b1000 =
b1 ("
b101010101100110 '"
b100 &"
1-
#180
0-
#185
b0 V
b1 X
1g
1|
b1111111111111111 z
b1010101011001100101010101100110 w
b1 }
1-
#190
0-
#195
1B
0|
1N
1O
1!
1n
b111111111111111100000000 s
b10001000011101111000100000000000 l
b110 T
b110 o
b1 P
b0 c
b0 p
b0 b
b0 r
0a
0Y
0d
b111011110001000 5
b111011110001000 @
b101 .
b101 ;
b111011110001000 '"
b101 &"
b1000 2
b1000 =
1/
1-
#200
0-
#205
0g
0O
0N
1-
#210
0-
#215
xB
b11001010111111101011101010111110 c
b11001010111111101011101010111110 p
b10 b
b10 r
1a
1Y
1d
b10 X
1g
x!
0n
b10 L
b11111111111111111111111111111111 s
b0 P
b11001010111111101011101010111110 l
b1111 T
b1111 o
b11001010111111101011101010111110 5
b11001010111111101011101010111110 @
b1000 .
b1000 ;
b10 1
b10 <
b10 ("
b11001010111111101011101010111110 '"
b1000 &"
b1000 2
b1000 =
1/
1-
#220
0-
#225
1B
b0 c
b0 p
b0 b
b0 r
0a
0Y
0d
1!
1n
1|
b11111111111111111111111111111111 z
b11001010111111101011101010111110 w
b10 }
1-
#230
0-
#235
0|
1N
1O
0D
b0 *"
16
b10 )"
b0 2
b0 =
0/
1-
#240
0-
#245
0g
0O
0N
b1 *"
1-
#250
0-
#255
0B
0!
0n
06
b10 *"
1-
#260
0-
#265
xB
1)
b0 '
b0 Z
b100 %
b100 ]
x!
b0 L
b11111111 s
1a
1Y
1^
b0 [
b0 q
b10111110101111101011111010111110 l
b1 T
b1 o
1G
1/
b0 .
b0 ;
b0 1
b0 <
b100 2
b100 =
b10 :
b0 #"
b0 ""
1-
#270
0-
#275
0B
1|
1{
0~
b11111111 z
b0 w
b0 }
0)
0!
0a
0Y
0^
0/
1-
#280
0-
#285
b1100110000000000010001 W
1B
0|
1N
b1100110000000000010001 C
b1100110000000000010001 M
b1100110000000000010001 y
1O
1-
#290
0-
#295
0O
0N
1!
0G
b0 *"
16
b0 2
b0 =
1-
#300
0-
#305
b1 *"
1-
#310
0-
#315
0B
0!
06
b10 *"
1-
#320
0-
#325
xB
1)
b100 '
b100 Z
x!
b0 s
1a
1Y
1^
b1 P
b0 l
b0 T
b0 o
1G
1/
b1 .
b1 ;
b100 1
b100 <
b100 2
b100 =
b100 #"
b1 ""
1-
#330
0-
#335
0B
1|
b0 z
0)
0!
0a
0Y
0^
0/
1-
#340
0-
#345
1B
0|
1N
1O
1-
#350
0-
#355
b110011 W
0O
0N
b110011 C
b10 V
b100 f
1e
b0 X
1g
b10 '
b10 Z
b1000 %
b1000 ]
1!
b111111110000000000000000 s
1a
1Y
1^
b10 P
b100 T
b100 o
b10111110101111100000000000000000 l
1/
b10 .
b10 ;
b0 1
b0 <
b0 #"
b10 ""
b100 2
b100 =
1-
#360
0-
#365
1n
1|
b111111110000000000000000 z
0a
0Y
0^
0/
1-
#370
0-
#375
0|
1N
1O
1-
#380
0-
#385
0g
0O
0N
0G
b0 *"
16
b1 )"
b0 2
b0 =
1-
#390
0-
#395
0B
0!
0n
06
b1 *"
1-
#400
0-
#405
xB
1)
b100 '
b100 Z
b100 %
b100 ]
x!
b0 s
1a
1Y
1^
b11 P
b0 l
b0 T
b0 o
1G
1/
b11 .
b11 ;
b100 1
b100 <
b100 2
b100 =
b100 #"
b11 ""
1-
#410
0-
#415
0B
1|
b0 z
0)
0!
0a
0Y
0^
0/
1-
#420
0-
#425
1B
0|
1N
1O
1-
#430
0-
#435
b10001 W
0O
0N
b1100110000000000010001 C
b0 V
b1 X
1g
b110011 #
b110011 `
b110011 &
b110011 \
1"
b0 '
b0 Z
1!
b1 [
b1 q
b1 L
b1111111111111111 s
1a
1Y
1^
b0 P
b0 U
b0 m
b11 T
b11 o
b10111010101111101011101010111110 l
1/
b100 .
b100 ;
b1 1
b1 <
b1 #"
b100 ""
b100 2
b100 =
1-
#440
0-
#445
1n
1|
b1111111111111111 z
b1 x
b0 [
b0 q
0a
0Y
0^
0/
1-
#450
0-
#455
b101010101100110 W
0|
1N
b101010101100110 C
b101010101100110 M
b101010101100110 y
1O
1-
#460
0-
#465
0g
b101010101100110 &
b101010101100110 \
1"
b101010101100110 #
b101010101100110 `
b1 '
b1 Z
0O
0N
b0 s
b0 l
b0 T
b0 o
1/
b101 1
b101 <
b101 #"
b100 2
b100 =
1-
#470
0-
#475
0B
0!
0n
0/
1-
#480
0-
#485
1-
#490
0-
#495
1!
1B
0G
b0 *"
16
b11 )"
b0 2
b0 =
1-
#500
0-
#505
b1 *"
1-
#510
0-
#515
b10 *"
1-
#520
0-
#525
0B
0!
06
b11 *"
1-
#530
0-
#535
xB
1)
0"
b0 #
b0 `
x!
b11111111111111110000000000000000 s
1a
1Y
1^
b1 [
b1 q
b10 P
b1100 T
b1100 o
b10111010101111100000000000000000 l
1G
1/
b110 .
b110 ;
b1 1
b1 <
b100 2
b100 =
b1 #"
b110 ""
1-
#540
0-
#545
0B
0)
0!
1|
b11111111111111110000000000000000 z
b0 [
b0 q
0a
0Y
0^
0/
1-
#550
0-
#555
1B
0|
1N
1O
1-
#560
0-
#565
b0 W
1B
b0 C
b10 V
b101 X
1g
b101010101100110 #
b101010101100110 `
1"
1!
0O
0N
b0 s
b1 [
b1 q
1a
1Y
1^
b0 l
b0 T
b0 o
1/
b101 1
b101 <
b101 #"
b100 2
b100 =
1-
#570
0-
#575
1|
b0 z
1n
b0 [
b0 q
0a
0Y
0^
0/
1-
#580
0-
#585
0|
1N
1O
1-
#590
0-
#595
0O
0N
0g
b0 &
b0 \
1"
b0 #
b0 `
b101 '
b101 Z
b10 L
b11111111111111111111111111111111 s
b0 P
b1111 T
b1111 o
b11001010111111101011101010111110 l
1/
b1000 .
b1000 ;
b10 1
b10 <
b10 #"
b1000 ""
b100 2
b100 =
1-
#600
0-
#605
0B
0!
0n
0/
1-
#610
0-
#615
1-
#620
0-
#625
xB
b101010101100110 W
1)
b101010101100110 C
b0 V
b101 i
b1 f
b10 X
1g
x!
1k
b1000 j
b101 h
1E
0G
1/
b10010001101000101011001111000 4
b10010001101000101011001111000 ?
b101 3
b101 >
b0 :
b10010001101000101011001111000 %"
b101 $"
b1 2
b1 =
1-
#630
0-
#635
1B
0)
1!
1n
b1000 j
b101 h
0k
0/
1-
#640
0-
#645
0B
0g
1(
0!
b0 j
b0 h
0E
10
b0 2
b0 =
1-
#650
0-
#655
0(
1!
0n
1B
b0 *"
16
b100 )"
00
1-
#660
0-
#665
b1 *"
1-
#670
0-
#675
b10 *"
1-
#680
0-
#685
b11 *"
1-
#690
0-
#695
0B
0!
06
b100 *"
1-
#700
0-
#705
1-
#710
0-
#715
1-
#720
0-
#725
1-
#730
0-
#735
1-
#740
0-
#745
1-
#750
0-
#755
1-
