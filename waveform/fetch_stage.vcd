$date
	Thu Aug 28 02:12:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 32 ! fi_pc [31:0] $end
$var wire 1 " fi_o_stall $end
$var wire 32 # fi_o_instr_fetch [31:0] $end
$var wire 1 $ fi_o_flush $end
$var wire 1 % fi_o_ce $end
$var wire 32 & fi_o_addr_instr [31:0] $end
$var parameter 32 ' AWIDTH_INSTR $end
$var parameter 32 ( DEPTH $end
$var parameter 32 ) IWIDTH $end
$var parameter 32 * PC_WIDTH $end
$var reg 32 + fi_alu_pc_value [31:0] $end
$var reg 1 , fi_change_pc $end
$var reg 1 - fi_clk $end
$var reg 1 . fi_i_ce $end
$var reg 1 / fi_i_flush $end
$var reg 1 0 fi_i_stall $end
$var reg 1 1 fi_rst $end
$var integer 32 2 i [31:0] $end
$scope module fi $end
$var wire 32 3 fi_alu_pc_value [31:0] $end
$var wire 1 , fi_change_pc $end
$var wire 1 - fi_clk $end
$var wire 1 . fi_i_ce $end
$var wire 1 / fi_i_flush $end
$var wire 1 0 fi_i_stall $end
$var wire 1 1 fi_rst $end
$var wire 32 4 fi_pc [31:0] $end
$var wire 1 " fi_o_stall $end
$var wire 32 5 fi_o_instr_mem [31:0] $end
$var wire 32 6 fi_o_instr_fetch [31:0] $end
$var wire 1 $ fi_o_flush $end
$var wire 1 % fi_o_ce $end
$var wire 32 7 fi_o_addr_instr [31:0] $end
$var wire 1 8 fi_o_ack $end
$var wire 1 9 fi_i_syn $end
$var parameter 32 : AWIDTH_INSTR $end
$var parameter 32 ; DEPTH $end
$var parameter 32 < IWIDTH $end
$var parameter 32 = PC_WIDTH $end
$scope module f $end
$var wire 32 > f_alu_pc_value [31:0] $end
$var wire 1 , f_change_pc $end
$var wire 1 - f_clk $end
$var wire 1 . f_i_ce $end
$var wire 1 / f_i_flush $end
$var wire 1 0 f_i_stall $end
$var wire 1 1 f_rst $end
$var wire 1 ? stall $end
$var wire 32 @ f_i_instr [31:0] $end
$var wire 1 8 f_i_ack $end
$var parameter 32 A AWIDTH_INSTR $end
$var parameter 32 B IWIDTH $end
$var parameter 32 C PC_WIDTH $end
$var reg 1 D ce $end
$var reg 1 E ce_d $end
$var reg 32 F f_o_addr_instr [31:0] $end
$var reg 1 % f_o_ce $end
$var reg 1 $ f_o_flush $end
$var reg 32 G f_o_instr [31:0] $end
$var reg 1 " f_o_stall $end
$var reg 1 9 f_o_syn $end
$var reg 1 H f_o_syn_r $end
$var reg 32 I f_pc [31:0] $end
$var reg 1 J init_done $end
$var reg 32 K prev_pc [31:0] $end
$upscope $end
$scope module t $end
$var wire 1 - t_clk $end
$var wire 1 9 t_i_syn $end
$var wire 1 1 t_rst $end
$var parameter 32 L DEPTH $end
$var parameter 32 M DWIDTH $end
$var parameter 32 N IWIDTH $end
$var reg 1 8 t_o_ack $end
$var reg 32 O t_o_instr [31:0] $end
$var integer 32 P counter [31:0] $end
$upscope $end
$upscope $end
$scope task display $end
$var integer 32 Q counter [31:0] $end
$upscope $end
$scope task reset $end
$var integer 32 R counter [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 N
b100000 M
b100100 L
b100000 C
b100000 B
b100000 A
b100000 =
b100000 <
b100100 ;
b100000 :
b100000 *
b100000 )
b100100 (
b100000 '
$end
#0
$dumpvars
b10 R
bx Q
b0 P
b0 O
b0 K
0J
b0 I
0H
b0 G
b0 F
0E
0D
b0 @
0?
bx >
09
08
b0 7
b0 6
b0 5
b0 4
bx 3
b0 2
01
00
0/
0.
0-
x,
bx +
b0 &
0%
0$
b0 #
0"
b0 !
$end
#5
1-
#10
0-
#15
1?
b100 !
b100 4
b100 I
1H
19
1D
1J
11
1-
#20
0-
#25
0?
b1 P
18
b1100010000000010110011 5
b1100010000000010110011 @
b1100010000000010110011 O
b100100 Q
1.
1-
#30
0-
#35
b10 P
b1000000011000101000001000110011 5
b1000000011000101000001000110011 @
b1000000011000101000001000110011 O
1E
09
b100 K
b1100010000000010110011 #
b1100010000000010110011 6
b1100010000000010110011 G
b1 2
1-
#40
0-
#45
0H
1%
b1000000011000101000001000110011 #
b1000000011000101000001000110011 6
b1000000011000101000001000110011 G
b100 &
b100 7
b100 F
08
b10 2
1-
#50
0-
#55
b11 2
1-
#60
0-
#65
b100 2
1-
#70
0-
#75
b101 2
1-
#80
0-
#85
b110 2
1-
#90
0-
#95
b111 2
1-
#100
0-
#105
b1000 2
1-
#110
0-
#115
b1001 2
1-
#120
0-
#125
b1010 2
1-
#130
0-
#135
b1011 2
1-
#140
0-
#145
b1100 2
1-
#150
0-
#155
b1101 2
1-
#160
0-
#165
b1110 2
1-
#170
0-
#175
b1111 2
1-
#180
0-
#185
b10000 2
1-
#190
0-
#195
b10001 2
1-
#200
0-
#205
b10010 2
1-
#210
0-
#215
b10011 2
1-
#220
0-
#225
b10100 2
1-
#230
0-
#235
b10101 2
1-
#240
0-
#245
b10110 2
1-
#250
0-
#255
b10111 2
1-
#260
0-
#265
b11000 2
1-
#270
0-
#275
b11001 2
1-
#280
0-
#285
b11010 2
1-
#290
0-
#295
b11011 2
1-
#300
0-
#305
b11100 2
1-
#310
0-
#315
b11101 2
1-
#320
0-
#325
b11110 2
1-
#330
0-
#335
b11111 2
1-
#340
0-
#345
b100000 2
1-
#350
0-
#355
b100001 2
1-
#360
0-
#365
b100010 2
1-
#370
0-
#375
b100011 2
1-
#380
0-
#385
b100100 2
1-
#390
0-
#395
1-
#400
0-
#405
1-
#410
0-
#415
1-
#420
0-
#425
1-
#430
0-
#435
1-
#440
0-
#445
1-
#450
0-
#455
1-
#460
0-
#465
1-
#470
0-
#475
1-
#480
0-
#485
1-
#490
0-
#495
1-
#500
0-
#505
1-
#510
0-
#515
1-
#520
0-
#525
1-
#530
0-
#535
1-
#540
0-
#545
1-
#550
0-
#555
1-
#560
0-
#565
1-
#570
0-
#575
1-
#580
0-
#585
1-
