#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_000001c6f361af70 .scope module, "tb" "tb" 2 2;
 .timescale 0 0;
P_000001c6f361b100 .param/l "AWIDTH_INSTR" 0 2 5, +C4<00000000000000000000000000100000>;
P_000001c6f361b138 .param/l "DEPTH" 0 2 4, +C4<00000000000000000000000000100100>;
P_000001c6f361b170 .param/l "IWIDTH" 0 2 3, +C4<00000000000000000000000000100000>;
P_000001c6f361b1a8 .param/l "PC_WIDTH" 0 2 6, +C4<00000000000000000000000000100000>;
v000001c6f36703f0_0 .var "fi_alu_pc_value", 31 0;
v000001c6f36716b0_0 .var "fi_change_pc", 0 0;
v000001c6f3670030_0 .var "fi_clk", 0 0;
v000001c6f3670530_0 .var "fi_i_ce", 0 0;
v000001c6f3670a30_0 .var "fi_i_flush", 0 0;
v000001c6f3671750_0 .var "fi_i_stall", 0 0;
v000001c6f3670850_0 .net "fi_o_addr_instr", 31 0, v000001c6f366f550_0;  1 drivers
v000001c6f36705d0_0 .net "fi_o_ce", 0 0, v000001c6f366f5f0_0;  1 drivers
v000001c6f3671250_0 .net "fi_o_flush", 0 0, v000001c6f366ebf0_0;  1 drivers
v000001c6f3670df0_0 .net "fi_o_instr_fetch", 31 0, v000001c6f366ec90_0;  1 drivers
v000001c6f3671110_0 .net "fi_o_stall", 0 0, v000001c6f366ed30_0;  1 drivers
v000001c6f3671930_0 .net "fi_pc", 31 0, v000001c6f366e970_0;  1 drivers
v000001c6f3671070_0 .var "fi_rst", 0 0;
v000001c6f3670cb0_0 .var/i "i", 31 0;
S_000001c6f3600620 .scope task, "display" "display" 2 63, 2 63 0, S_000001c6f361af70;
 .timescale 0 0;
v000001c6f35abad0_0 .var/i "counter", 31 0;
E_000001c6f35ef020 .event posedge, v000001c6f35c2fe0_0;
TD_tb.display ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c6f3670cb0_0, 0, 32;
T_0.0 ;
    %load/vec4 v000001c6f3670cb0_0;
    %load/vec4 v000001c6f35abad0_0;
    %cmp/s;
    %jmp/0xz T_0.1, 5;
    %wait E_000001c6f35ef020;
    %vpi_call 2 67 "$display", $time, " ", "addr = %d, instruction = %h, syn = %b, ack = %b", v000001c6f3670cb0_0, v000001c6f3670df0_0, v000001c6f3670990_0, v000001c6f3670d50_0 {0 0 0};
    %load/vec4 v000001c6f3670cb0_0;
    %addi 1, 0, 32;
    %store/vec4 v000001c6f3670cb0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
S_000001c6f36007b0 .scope module, "fi" "fetch_i" 2 25, 3 6 0, S_000001c6f361af70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "fi_clk";
    .port_info 1 /INPUT 1 "fi_rst";
    .port_info 2 /OUTPUT 32 "fi_o_instr_fetch";
    .port_info 3 /OUTPUT 32 "fi_o_addr_instr";
    .port_info 4 /INPUT 1 "fi_change_pc";
    .port_info 5 /INPUT 32 "fi_alu_pc_value";
    .port_info 6 /OUTPUT 32 "fi_pc";
    .port_info 7 /INPUT 1 "fi_i_stall";
    .port_info 8 /OUTPUT 1 "fi_o_stall";
    .port_info 9 /OUTPUT 1 "fi_o_ce";
    .port_info 10 /INPUT 1 "fi_i_flush";
    .port_info 11 /OUTPUT 1 "fi_o_flush";
    .port_info 12 /INPUT 1 "fi_i_ce";
P_000001c6f3600940 .param/l "AWIDTH_INSTR" 0 3 9, +C4<00000000000000000000000000100000>;
P_000001c6f3600978 .param/l "DEPTH" 0 3 8, +C4<00000000000000000000000000100100>;
P_000001c6f36009b0 .param/l "IWIDTH" 0 3 7, +C4<00000000000000000000000000100000>;
P_000001c6f36009e8 .param/l "PC_WIDTH" 0 3 10, +C4<00000000000000000000000000100000>;
v000001c6f366eab0_0 .net "fi_alu_pc_value", 31 0, v000001c6f36703f0_0;  1 drivers
v000001c6f36708f0_0 .net "fi_change_pc", 0 0, v000001c6f36716b0_0;  1 drivers
v000001c6f366fef0_0 .net "fi_clk", 0 0, v000001c6f3670030_0;  1 drivers
v000001c6f36711b0_0 .net "fi_i_ce", 0 0, v000001c6f3670530_0;  1 drivers
v000001c6f3670c10_0 .net "fi_i_flush", 0 0, v000001c6f3670a30_0;  1 drivers
v000001c6f3671430_0 .net "fi_i_stall", 0 0, v000001c6f3671750_0;  1 drivers
v000001c6f3670990_0 .net "fi_i_syn", 0 0, v000001c6f366f690_0;  1 drivers
v000001c6f3670d50_0 .net "fi_o_ack", 0 0, v000001c6f366e830_0;  1 drivers
v000001c6f3671570_0 .net "fi_o_addr_instr", 31 0, v000001c6f366f550_0;  alias, 1 drivers
v000001c6f3670fd0_0 .net "fi_o_ce", 0 0, v000001c6f366f5f0_0;  alias, 1 drivers
v000001c6f366fe50_0 .net "fi_o_flush", 0 0, v000001c6f366ebf0_0;  alias, 1 drivers
v000001c6f366ff90_0 .net "fi_o_instr_fetch", 31 0, v000001c6f366ec90_0;  alias, 1 drivers
v000001c6f3670490_0 .net "fi_o_instr_mem", 31 0, v000001c6f366e8d0_0;  1 drivers
v000001c6f36714d0_0 .net "fi_o_stall", 0 0, v000001c6f366ed30_0;  alias, 1 drivers
v000001c6f3670710_0 .net "fi_pc", 31 0, v000001c6f366e970_0;  alias, 1 drivers
v000001c6f3671610_0 .net "fi_rst", 0 0, v000001c6f3671070_0;  1 drivers
S_000001c6f35f4ce0 .scope module, "f" "instruction_fetch" 3 47, 4 4 0, S_000001c6f36007b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "f_clk";
    .port_info 1 /INPUT 1 "f_rst";
    .port_info 2 /INPUT 32 "f_i_instr";
    .port_info 3 /OUTPUT 32 "f_o_instr";
    .port_info 4 /OUTPUT 32 "f_o_addr_instr";
    .port_info 5 /INPUT 1 "f_change_pc";
    .port_info 6 /INPUT 32 "f_alu_pc_value";
    .port_info 7 /OUTPUT 32 "f_pc";
    .port_info 8 /OUTPUT 1 "f_o_syn";
    .port_info 9 /INPUT 1 "f_i_ack";
    .port_info 10 /INPUT 1 "f_i_stall";
    .port_info 11 /OUTPUT 1 "f_o_ce";
    .port_info 12 /OUTPUT 1 "f_o_stall";
    .port_info 13 /INPUT 1 "f_i_flush";
    .port_info 14 /OUTPUT 1 "f_o_flush";
    .port_info 15 /INPUT 1 "f_i_ce";
P_000001c6f35c3310 .param/l "AWIDTH_INSTR" 0 4 6, +C4<00000000000000000000000000100000>;
P_000001c6f35c3348 .param/l "IWIDTH" 0 4 5, +C4<00000000000000000000000000100000>;
P_000001c6f35c3380 .param/l "PC_WIDTH" 0 4 7, +C4<00000000000000000000000000100000>;
L_000001c6f3608850 .functor OR 1, v000001c6f366ed30_0, v000001c6f3671750_0, C4<0>, C4<0>;
L_000001c6f3607f90 .functor AND 1, v000001c6f366ef10_0, L_000001c6f3670e90, C4<1>, C4<1>;
L_000001c6f3608070 .functor OR 1, L_000001c6f3608850, L_000001c6f3607f90, C4<0>, C4<0>;
v000001c6f35c3480_0 .net *"_ivl_1", 0 0, L_000001c6f3608850;  1 drivers
v000001c6f35f4f80_0 .net *"_ivl_3", 0 0, L_000001c6f3670e90;  1 drivers
v000001c6f361b1f0_0 .net *"_ivl_5", 0 0, L_000001c6f3607f90;  1 drivers
v000001c6f35c2d60_0 .var "ce", 0 0;
v000001c6f35c2e00_0 .var "ce_d", 0 0;
v000001c6f35c2ea0_0 .net "f_alu_pc_value", 31 0, v000001c6f36703f0_0;  alias, 1 drivers
v000001c6f35c2f40_0 .net "f_change_pc", 0 0, v000001c6f36716b0_0;  alias, 1 drivers
v000001c6f35c2fe0_0 .net "f_clk", 0 0, v000001c6f3670030_0;  alias, 1 drivers
v000001c6f35c3080_0 .net "f_i_ack", 0 0, v000001c6f366e830_0;  alias, 1 drivers
v000001c6f366f370_0 .net "f_i_ce", 0 0, v000001c6f3670530_0;  alias, 1 drivers
v000001c6f366eb50_0 .net "f_i_flush", 0 0, v000001c6f3670a30_0;  alias, 1 drivers
v000001c6f366f410_0 .net "f_i_instr", 31 0, v000001c6f366e8d0_0;  alias, 1 drivers
v000001c6f366edd0_0 .net "f_i_stall", 0 0, v000001c6f3671750_0;  alias, 1 drivers
v000001c6f366f550_0 .var "f_o_addr_instr", 31 0;
v000001c6f366f5f0_0 .var "f_o_ce", 0 0;
v000001c6f366ebf0_0 .var "f_o_flush", 0 0;
v000001c6f366ec90_0 .var "f_o_instr", 31 0;
v000001c6f366ed30_0 .var "f_o_stall", 0 0;
v000001c6f366f690_0 .var "f_o_syn", 0 0;
v000001c6f366ef10_0 .var "f_o_syn_r", 0 0;
v000001c6f366e970_0 .var "f_pc", 31 0;
v000001c6f366ee70_0 .net "f_rst", 0 0, v000001c6f3671070_0;  alias, 1 drivers
v000001c6f366f230_0 .var "i_addr_instr", 31 0;
v000001c6f366f4b0_0 .var "prev_pc", 31 0;
v000001c6f366f050_0 .net "stall", 0 0, L_000001c6f3608070;  1 drivers
E_000001c6f35eeae0/0 .event negedge, v000001c6f366ee70_0;
E_000001c6f35eeae0/1 .event posedge, v000001c6f35c2fe0_0;
E_000001c6f35eeae0 .event/or E_000001c6f35eeae0/0, E_000001c6f35eeae0/1;
L_000001c6f3670e90 .reduce/nor v000001c6f366e830_0;
S_000001c6f366fc70 .scope module, "t" "transmit" 3 35, 5 4 0, S_000001c6f36007b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "t_clk";
    .port_info 1 /INPUT 1 "t_rst";
    .port_info 2 /INPUT 1 "t_i_syn";
    .port_info 3 /OUTPUT 32 "t_o_instr";
    .port_info 4 /OUTPUT 1 "t_o_ack";
P_000001c6f35a8660 .param/l "DEPTH" 0 5 6, +C4<00000000000000000000000000100100>;
P_000001c6f35a8698 .param/l "IWIDTH" 0 5 5, +C4<00000000000000000000000000100000>;
v000001c6f366efb0_0 .var "accept", 0 0;
v000001c6f366e790_0 .var/i "counter", 31 0;
v000001c6f366f0f0 .array "mem_instr", 35 0, 31 0;
v000001c6f366f2d0_0 .net "t_clk", 0 0, v000001c6f3670030_0;  alias, 1 drivers
v000001c6f366f190_0 .net "t_i_syn", 0 0, v000001c6f366f690_0;  alias, 1 drivers
v000001c6f366e830_0 .var "t_o_ack", 0 0;
v000001c6f366e8d0_0 .var "t_o_instr", 31 0;
v000001c6f366ea10_0 .net "t_rst", 0 0, v000001c6f3671070_0;  alias, 1 drivers
S_000001c6f3671e10 .scope task, "reset" "reset" 2 55, 2 55 0, S_000001c6f361af70;
 .timescale 0 0;
v000001c6f3671890_0 .var/i "counter", 31 0;
TD_tb.reset ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001c6f3671070_0, 0, 1;
    %load/vec4 v000001c6f3671890_0;
T_1.2 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_1.3, 5;
    %jmp/1 T_1.3, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001c6f35ef020;
    %jmp T_1.2;
T_1.3 ;
    %pop/vec4 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001c6f3671070_0, 0, 1;
    %end;
    .scope S_000001c6f366fc70;
T_2 ;
    %vpi_call 5 22 "$readmemh", "./source/instr.txt", v000001c6f366f0f0, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000000100011 {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c6f366e790_0, 0, 32;
    %end;
    .thread T_2;
    .scope S_000001c6f366fc70;
T_3 ;
    %wait E_000001c6f35eeae0;
    %load/vec4 v000001c6f366ea10_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.0, 8;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366e790_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366e830_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366efb0_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366e8d0_0, 0;
    %jmp T_3.1;
T_3.0 ;
    %load/vec4 v000001c6f366f190_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.4, 9;
    %load/vec4 v000001c6f366efb0_0;
    %nor/r;
    %and;
T_3.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.2, 8;
    %ix/getv/s 4, v000001c6f366e790_0;
    %load/vec4a v000001c6f366f0f0, 4;
    %assign/vec4 v000001c6f366e8d0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001c6f366e830_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001c6f366efb0_0, 0;
    %load/vec4 v000001c6f366e790_0;
    %cmpi/s 35, 0, 32;
    %jmp/0xz  T_3.5, 5;
    %load/vec4 v000001c6f366e790_0;
    %addi 1, 0, 32;
    %assign/vec4 v000001c6f366e790_0, 0;
    %jmp T_3.6;
T_3.5 ;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366e790_0, 0;
T_3.6 ;
    %jmp T_3.3;
T_3.2 ;
    %load/vec4 v000001c6f366f190_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.7, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366e830_0, 0;
T_3.7 ;
T_3.3 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_000001c6f35f4ce0;
T_4 ;
    %wait E_000001c6f35eeae0;
    %load/vec4 v000001c6f366ee70_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366ed30_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f35c2d60_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f35c2e00_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366f5f0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366ebf0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366ed30_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366ec90_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366e970_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366f4b0_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366f230_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v000001c6f366f550_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366ef10_0, 0;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v000001c6f35c2d60_0;
    %assign/vec4 v000001c6f366f690_0, 0;
    %load/vec4 v000001c6f366f690_0;
    %assign/vec4 v000001c6f366ef10_0, 0;
    %load/vec4 v000001c6f366eb50_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.2, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f35c2d60_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001c6f366ed30_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001c6f366ebf0_0, 0;
    %jmp T_4.3;
T_4.2 ;
    %load/vec4 v000001c6f35c2f40_0;
    %flag_set/vec4 9;
    %jmp/1 T_4.7, 9;
    %load/vec4 v000001c6f35c3080_0;
    %flag_set/vec4 10;
    %flag_or 9, 10;
T_4.7;
    %flag_get/vec4 9;
    %jmp/0 T_4.6, 9;
    %load/vec4 v000001c6f366edd0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/1 T_4.8, 9;
    %load/vec4 v000001c6f366ed30_0;
    %or;
T_4.8;
    %nor/r;
    %and;
T_4.6;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.4, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001c6f35c2d60_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366ed30_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366ebf0_0, 0;
    %jmp T_4.5;
T_4.4 ;
    %load/vec4 v000001c6f366f370_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.9, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001c6f35c2d60_0, 0;
T_4.9 ;
T_4.5 ;
T_4.3 ;
    %load/vec4 v000001c6f35c2d60_0;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_4.15, 10;
    %load/vec4 v000001c6f35c3080_0;
    %and;
T_4.15;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.14, 9;
    %load/vec4 v000001c6f366f050_0;
    %nor/r;
    %and;
T_4.14;
    %flag_set/vec4 8;
    %jmp/1 T_4.13, 8;
    %load/vec4 v000001c6f366f050_0;
    %flag_set/vec4 11;
    %flag_get/vec4 11;
    %jmp/0 T_4.17, 11;
    %load/vec4 v000001c6f366f5f0_0;
    %nor/r;
    %and;
T_4.17;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_4.16, 10;
    %load/vec4 v000001c6f35c2d60_0;
    %and;
T_4.16;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_4.13;
    %jmp/0xz  T_4.11, 8;
    %load/vec4 v000001c6f366f4b0_0;
    %assign/vec4 v000001c6f366f230_0, 0;
    %load/vec4 v000001c6f366f230_0;
    %assign/vec4 v000001c6f366f550_0, 0;
    %load/vec4 v000001c6f366f410_0;
    %assign/vec4 v000001c6f366ec90_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366ebf0_0, 0;
T_4.11 ;
    %load/vec4 v000001c6f366f050_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.18, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001c6f366f5f0_0, 0;
    %jmp T_4.19;
T_4.18 ;
    %load/vec4 v000001c6f35c2e00_0;
    %assign/vec4 v000001c6f366f5f0_0, 0;
T_4.19 ;
    %load/vec4 v000001c6f35c3080_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.20, 8;
    %load/vec4 v000001c6f366e970_0;
    %assign/vec4 v000001c6f366f4b0_0, 0;
    %load/vec4 v000001c6f35c2f40_0;
    %flag_set/vec4 8;
    %jmp/1 T_4.24, 8;
    %load/vec4 v000001c6f366eb50_0;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_4.24;
    %jmp/0xz  T_4.22, 8;
    %load/vec4 v000001c6f35c2ea0_0;
    %assign/vec4 v000001c6f366e970_0, 0;
    %jmp T_4.23;
T_4.22 ;
    %load/vec4 v000001c6f366e970_0;
    %addi 4, 0, 32;
    %assign/vec4 v000001c6f366e970_0, 0;
    %load/vec4 v000001c6f35c2d60_0;
    %assign/vec4 v000001c6f35c2e00_0, 0;
T_4.23 ;
T_4.20 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_000001c6f361af70;
T_5 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001c6f3670030_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001c6f3671750_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001c6f3670a30_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001c6f3670530_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c6f3670cb0_0, 0, 32;
    %end;
    .thread T_5;
    .scope S_000001c6f361af70;
T_6 ;
    %delay 5, 0;
    %load/vec4 v000001c6f3670030_0;
    %inv;
    %store/vec4 v000001c6f3670030_0, 0, 1;
    %jmp T_6;
    .thread T_6;
    .scope S_000001c6f361af70;
T_7 ;
    %vpi_call 2 51 "$dumpfile", "./waveform/fetch_stage.vcd" {0 0 0};
    %vpi_call 2 52 "$dumpvars", 32'sb00000000000000000000000000000000, S_000001c6f361af70 {0 0 0};
    %end;
    .thread T_7;
    .scope S_000001c6f361af70;
T_8 ;
    %pushi/vec4 2, 0, 32;
    %store/vec4 v000001c6f3671890_0, 0, 32;
    %fork TD_tb.reset, S_000001c6f3671e10;
    %join;
    %wait E_000001c6f35ef020;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001c6f3670530_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001c6f3671750_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001c6f3670a30_0, 0, 1;
    %pushi/vec4 36, 0, 32;
    %store/vec4 v000001c6f35abad0_0, 0, 32;
    %fork TD_tb.display, S_000001c6f3600620;
    %join;
    %delay 200, 0;
    %vpi_call 2 79 "$finish" {0 0 0};
    %end;
    .thread T_8;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    ".\test\tb_fetch_stage.v";
    "././source/fetch_stage.v";
    "././source/fetch_instruction.v";
    "././source/transmit_instruction.v";
